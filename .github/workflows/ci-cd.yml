name: CI/CD (B)

on:
  push:
    branches: [ main ]
  pull_request:

jobs:
  test-build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install deps
        run: npm ci

      - name: Run tests (optional)
        run: npm test --if-present

      - name: Login to GHCR
        run: echo "${{ github.token }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

      - name: Build & Push image
        run: |
          IMAGE=ghcr.io/${{ github.repository }}/bmad:latest
          docker build -t $IMAGE .
          docker push $IMAGE

  deploy:
    needs: test-build
    runs-on: ubuntu-latest
    steps:
      - name: Deploy to EC2 (service bmad-dev)
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_KEY }}
          script: |
            set -e
            mkdir -p ~/bmad-app-dev
            cd ~/bmad-app-dev

            # render .env (OPENAI_API_KEY lấy từ repo secret)
            cat > .env << 'EOF'
            OPENAI_API_KEY=${{ secrets.OPENAI_API_KEY }}
            PORT=3001
            EOF

            # docker-compose cho service mới bmad-dev (domain: bmad-dev.blackbirdn8n.xyz)
            cat > docker-compose.yml << 'YAML'
            services:
              bmad-dev:
                image: ghcr.io/${{ github.repository }}/bmad:latest
                container_name: bmad-dev
                env_file: .env
                restart: unless-stopped
                labels:
                  - "traefik.enable=true"
                  - "traefik.http.routers.bmad-dev.rule=Host(`bmad-dev.blackbirdn8n.xyz`)"
                  - "traefik.http.routers.bmad-dev.entrypoints=websecure"
                  - "traefik.http.routers.bmad-dev.tls.certresolver=mytlschallenge"
            networks:
              default:
                name: traefik-proxy
                external: true
            YAML

            # nếu image private, login GHCR; nếu public thì lệnh này vẫn OK
            echo "${{ github.token }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin || true

            # đảm bảo mạng traefik-proxy tồn tại
            docker network create traefik-proxy || true

            docker compose pull
            docker compose up -d
            docker system prune -f
